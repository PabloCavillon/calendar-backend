{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","Hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","Router/PrivateRoute.js","Router/PublicRoute.js","Router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","auth","payload","calendar","map","e","id","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddedNew","event","eventClearActive","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","everLayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","protoTypes","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ef4d07e.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal:    '[ui] Open Modal', \r\n    uiCloseModal:   '[ui] Close Modal', \r\n\r\n    eventSetActive:     '[event] Set Active',\r\n    eventLogout:        '[event] Logout',\r\n    eventStartAddNew:   '[event] Start Add New',\r\n    eventAddedNew:      '[event] Add New',\r\n    eventClearActive:   '[event] Clear Active',\r\n    eventUpdated:       '[event] Updated',\r\n    eventDeleted:       '[event] Deleted',\r\n    eventLoaded:        '[event] Loaded',\r\n    \r\n    authCheckingFinish:     '[auth] Finish checking login state',\r\n    authStartLogin:         '[auth] Start login',\r\n    authLogin:              '[auth] Login',\r\n    authStartRegister:      '[auth] Start register',\r\n    authStartTokenRenew:    '[auth] Start token renew',\r\n    authLogout:             '[auth] Logout',\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\n/*\r\n    {\r\n        id: 'aslkhdsasfnapsfa,\r\n        title:'Cumpleaños del jefe',\r\n        start: moment().toDate(),\r\n        end: moment().add(2, 'hour').toDate(),\r\n        notes:'comprar el pastel',\r\n        user:{\r\n            _id:'123',\r\n            name: 'Pablo'\r\n        }\r\n    }\r\n*/\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const calendarReducer = (state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddedNew:\r\n            return {\r\n                ...state,\r\n                events:[\r\n                    ...state.events, \r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => e.id !== state.activeEvent.id\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events:[...action.payload]\r\n            }\r\n        case types.eventLogout: \r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n\r\n    modalOpen: false,\r\n\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    auth: authReducer,\r\n    calendar: calendarReducer\r\n});\r\n\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            body:JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport const fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url, {\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type':'application/json',\r\n                'x-token': token\r\n            },\r\n            body:JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n        })\r\n    );\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        \r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                dispatch(eventAddedNew(event))\r\n             }\r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddedNew = (event) => ({\r\n    type: types.eventAddedNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActive = (event) => ({type: types.eventClearActive});\r\n\r\n\r\nexport const eventStartUpdate = (event) => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            \r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            \r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            \r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            \r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({type: types.eventDeleted});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            \r\n            const events = prepareEvents(body.eventos);\r\n            \r\n            dispatch(eventLoaded(events));\r\n        \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init.date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.id,\r\n                name:body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n} \r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init.date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name:body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init.date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name:body.name\r\n            }));\r\n        } else {\r\n            //Swal.fire('Error', body.msg, 'error')\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({type: types.authCheckingFinish})\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventLogout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({type: types.authLogout})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../Hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'pablo@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n    const {lEmail, lPassword} = formLoginValues;\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Laura',\r\n        rEmail: 'laura@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n \r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(rPassword1 !== rPassword2){\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n        \r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const {name} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">  \r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user:{name}} = event\r\n\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span> - { name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({type: types.uiOpenModal});\r\n\r\nexport const uiCloseModal = () => ({type: types.uiCloseModal});\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActive, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hour');\r\nconst nowPlus1 = moment().minutes(0).seconds(0).add(2,'hour');\r\n\r\nconst initEvent = {\r\n    title:'',\r\n    notes:'',\r\n    start:now.toDate(),\r\n    end:nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {title, notes, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActive());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    \r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n    \r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error', 'La fecha de finalizacion debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n    \r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues))\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues))\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            //onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\" \r\n            everLayClassName=\"modal-fondo\"\r\n        >\r\n            <h1>{ (activeEvent) ? 'Editar evento' : 'Nuevo evento'}</h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}                        \r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'} `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        autoComplete=\"off\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventClearActive } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(eventClearActive());\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>            \r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleClickDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>            \r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messages-es'\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport { CalendarModal } from './CalendarModal'\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\nimport { eventClearActive, eventSetActive, eventStartLoading } from '../../actions/events'\r\nimport { AddNewFab } from '../ui/AddNewFab'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment)\r\n \r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) =>  {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActive());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                (!!activeEvent) && <DeleteEventFab />\r\n            }\r\n            <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest \r\n}) => {\r\n    \r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/login' />\r\n            )}\r\n        />\r\n            \r\n    )\r\n}\r\n\r\nPrivateRoute.protoTypes={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => { \r\n    \r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? <Redirect to='/' />\r\n                    : <Component {...props} />\r\n            )}\r\n        />\r\n            \r\n    )\r\n}\r\n\r\nPublicRoute.protoTypes={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\nBrowserRouter as Router,\r\nSwitch,\r\nRedirect,\r\n} from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport default function AppRouter() {\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst {checking, uid} = useSelector(state => state.auth)\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(startChecking());\r\n\t}, [dispatch])\r\n\r\n\tif(checking){\r\n\t\treturn <h5>Espere...</h5>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<Switch>\r\n\r\n\t\t\t\t\t<PublicRoute \r\n\t\t\t\t\t\texact \r\n\t\t\t\t\t\tpath=\"/login\" \r\n\t\t\t\t\t\tcomponent={ LoginScreen }\r\n\t\t\t\t\t\tisAuthenticated={ !!uid }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/\" \r\n\t\t\t\t\t\tcomponent={CalendarScreen}\r\n\t\t\t\t\t\tisAuthenticated={ !!uid }\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Redirect to=\"/\"/>\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport AppRouter from './Router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n\t<CalendarApp />,\n\tdocument.getElementById('root')\n);\n\n\n"],"sourceRoot":""}